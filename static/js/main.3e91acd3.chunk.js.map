{"version":3,"sources":["logo.svg","componentss/Button.jsx","componentss/Navbar.jsx","data.js","context.js","componentss/Section.jsx","componentss/Title.jsx","componentss/SectionList.jsx","componentss/Details.jsx","componentss/Default.jsx","componentss/ContactMe.jsx","componentss/fetchWeatherApi.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ButtonContainer","styled","button","props","homepage","Navbar","state","NavWrapper","className","to","src","alt","width","height","Component","nav","sectionList","id","title","img","info","detailList","ListContext","React","createContext","ListProvider","list","setLists","tempList","forEach","item","singleList","setState","getItem","find","handleDetail","contactMe","console","log","this","Provider","value","children","ListConsumer","Consumer","Section","ListWrapper","onClick","style","div","Title","name","SectionList","Fragment","map","key","Details","Default","ContactMe","WeatherApi","loading","forecast","fetch","response","json","data","items","forecasts","length","area","i","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e91acd3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.button`\ntext-transform: capitalize;\nfont-size: 1.4rem;\nbackground:transparent;\nborder: 0.05rem solid var(--black);\nborder-color:${props => props.homepage? \"var(--black)\":\"var(--orange)\"};\ncolor:${props => props.homepage? \"var(--orange)\":\"var(--white)\"};\nborder-radius: 0.5rem;\npadding: 0.2rem 0.5rem;\ncursor:pointer;\nmargin:0.2rem 0.5rem 0.2rem 0;\ntransition:all 0.5s ease-in-out;\n&:hover{\n    background:var(--white);\n    color:var(--black)\n}\n&:focus{\n    outline:none;\n}\n`\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {ButtonContainer} from './Button';\n\nclass Navbar extends Component {\n    state = {  }\n    render() { \n        return ( \n            <NavWrapper className =\"navbar navbar-expand-sm navbar-dark px-sm-5\">\n                <Link to='/'>\n                    <img src='http://www.techladies.co/assets/techladies-89cf109e931e6ec8b468f8cf60b804e69017457e46ffd01788820f9fc1005f31.png' alt=\"homepage\" className=\"navbar-brand\" width={200} height={50} />\n                </Link>\n                <ul className=\"navbar-nav align-items-center\">\n                    <li className=\"nav-item ml-5\">\n                    <Link to =\"/\" className=\"nav-link\">\n                        Preparation for Bootcamp!\n                    </Link>\n                    </li>\n                </ul>\n                <Link to ='/details' className='ml-auto float:right'>\n                    <ButtonContainer>\n                        <span className=\"mr-0\">\n                        <i className=\"fas fa-phone-plus\" />\n                        </span>\n                        About me!\n                    </ButtonContainer>\n                </Link>\n                <Link to ='/ContactMe' className='ml-auto'>\n                    <ButtonContainer>\n                        <span className=\"mr-0\">\n                        <i className=\"fas fa-phone-plus\" />\n                        </span>\n                        Contact me!\n                    </ButtonContainer>\n                </Link>\n            </NavWrapper>\n         );\n    }\n}\n\nconst NavWrapper = styled.nav`\nbackground: var(--black);\n.nav-link{\n    color: var(--white)!important;\n    font-size:1.3rem;\n    text-transform:capitalize;\n}\n`\n\nexport default Navbar;","export const sectionList = [\n    {\n        id:1,\n        title: \"About me\",\n        img: \"https://www.thesprucepets.com/thmb/3zOwZGYooqPrRRmzgjgRhNH3PUc=/3558x2001/smart/filters:no_upscale()/Cat-rolling-GettyImages-165893132-58ac5ef05f9b58a3c90a144f.jpg\",\n        info:\"Hi! My name is Geraldine but you can call me G. Fun fact: My colleagues started calling me G when I was based in Indonesia last year for work. The locals pronounce G as J so noone knew how to pronounce my name properly. During my free time, i code alot, read alot & volunteer as much as time allows. I volunteer mainly with kids with cancer as well as dogs & cats. I am currently working as a Product Manager in a start-up & it made me realise the power of technology.\"\n    },\n    {\n        id: 2,\n        title: \"Why do I want to join the bootcamp?\",\n        img: \"https://images2.minutemediacdn.com/image/upload/c_crop,h_1193,w_2121,x_0,y_175/f_auto,q_auto,w_1100/v1554921998/shape/mentalfloss/549585-istock-909106260.jpg\",\n        info: \"I've recently got my hands onto coding. It's so fun & addictive and I'm completely hooked onto it. I would like to join this bootcamp so as to learn more about front-end and backend development. This can guide me towards a career switch as well as using technology to help the less fortunate especially so for the causes that I believe in. One of the projects that I would really love to work on is creating a online tuition resource platform for cancer kids to catch up on their studies when they cant attend school.\"\n    },\n    {\n        id: 3,\n        title: \"How do you find me?\",\n        img: \"https://i.ytimg.com/vi/Lcw5xknnzvc/maxresdefault.jpg\",\n        info: \"Wonder where I am? Look for me via Linkedin (www.linkedin.com/in/geraldinelhy) or email (geraldinelhy@gmail.com).\"\n    }\n];\n\nexport const detailList = {\n        id:1,\n        title: \"About me\",\n        img: \"https://www.thesprucepets.com/thmb/3zOwZGYooqPrRRmzgjgRhNH3PUc=/3558x2001/smart/filters:no_upscale()/Cat-rolling-GettyImages-165893132-58ac5ef05f9b58a3c90a144f.jpg\",\n        info:\"Hi! My name is Geraldine but you can call me G. Fun fact: My colleagues started calling me G when I was based in Indonesia last year for work. The locals pronounce G as J so noone knew how to pronounce my name properly. During my free time, i code alot, read alot & volunteer as much as time allows. I volunteer mainly with kids with cancer as well as dogs & cats. I am currently working as a Product Manager in a start-up & it made me realise the power of technology.\"\n};\n","import React, { Component } from 'react';\nimport {sectionList, detailList} from './data';\n\nconst ListContext = React.createContext();\n//Provider\n//Consumer\n\nclass ListProvider extends Component {\n    state = { \n        list: [], \n        detailList:detailList\n     }\n     componentDidMount() {\n         this.setLists();\n         };\n     setLists =() =>{\n         let tempList =[];\n         sectionList.forEach(item =>{\n             const singleList = {...item};\n             tempList = [...tempList,singleList];\n\n         })\n         this.setState(()=>{\n             return {list:tempList}\n         })\n     };\n\ngetItem = (id) => {\n    const list = this.state.list.find(item => item.id ===id);\n    return list;\n}\n\n     handleDetail = (id) =>{\n         const list = this.getItem(id);\n         this.setState(()=>{\n             return {detailList: list}\n         })\n     }\n     contactMe = () =>{\n        console.log('hello from contact me');\n    }\n    render() { \n        return ( \n            <ListContext.Provider value={{\n                ...this.state,\n                handleDetail:this.handleDetail,\n                contactMe:this.contactMe,\n\n            }}>\n                {this.props.children}\n            </ListContext.Provider>\n         );\n    }\n} \n \nconst ListConsumer = ListContext.Consumer;\n\nexport {ListProvider,ListConsumer};","import React, { Component } from 'react';\nimport style from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport {ListConsumer} from '../context';\nimport PropTypes from 'prop-types';\n\nclass Section extends Component {\n    state = { \n     }\n    render() { \n        const {id, title, img, info} = this.props.list;\n        return ( \n            <ListWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\n                <div className=\"card\">\n                    <ListConsumer>\n                        {value=> (\n                        <div className=\"img-container p-5\" \n                        onClick={()=> value.handleDetail(id)\n                    }>\n                    <Link to= \"/details\">\n                        <img src={img} alt=\"list\" className=\"card-img-top\"></img>\n                    </Link>\n                    </div>)}\n                    \n                    </ListConsumer>\n\n                    {/* card footer */}\n                    <div className=\"card-footer d-flex justify-content-center\">\n                        <p className=\"text-center mb-0\">\n                            {title}\n                        </p>\n                    </div>\n                </div>\n\n            </ListWrapper>\n         );\n    }\n}\n\n\nSection.propTypes = {\n        list:PropTypes.shape({\n        id:PropTypes.number,\n        img:PropTypes.string,\n        title:PropTypes.string,\n    }).isRequired\n};\n\nconst ListWrapper = style.div`\n.card{\n    border-color:transparent;\n    transition:all 5s linear;\n}\n.card-footer{\n    background:transparent;\n    border-top:transparent;\n    transition:all 1s linear;\n    font-size:30px;\n}\n&:hover{\n    .card{\n        border:0.04rem solid rgba(0,0,0,0.2);\n        box-shadow:2px 2px 5px 0px rgba(0,0,0,0.2)\n    }\n    .card-footer{\n        background:rgba(247,247,247);\n    }\n}\n.img-container{\n    position:relative;\n    overflow:hidden;\n}\n.card-img-top{\n    transition: all 1s linear;\n}\n.img-container:hover .card-img-top{\n    transform:scale(1.5);\n}\n`\n \nexport default Section;","import React from 'react';\n\nexport default function Title({name,title}){\n    return(\n        <div className=\"row\">\n            <div className=\"col-10 mx-auto my-2 text-center text-title font-size:150px\">\n                <h1 className=\"text-capitalize font-weight-bold\">\n                    {name} <strong className=\"text-blue\">{title}</strong>\n                </h1>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport Section from './Section';\nimport Title from './Title';\nimport {ListConsumer} from '../context';\nimport style from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nclass SectionList extends Component {\n    render() { \n        return ( \n            <React.Fragment>\n                <div className=\"py-5\">\n                <div className=\"container\">\n                <Title name=\"Bootcamp\" title=\"Assignment\"/>\n                <p className=\"col-10 mx-auto my-2 text-center text-title font-size:50px\">Click on the pictures to find out more!</p>\n\n                <div className=\"row\">\n                    <ListConsumer>\n                        {value => {\n                           return value.list.map(list =>{\n                               return <Section key={list.id} list={list}/>;\n                           } ) \n                        }\n                        }\n                    </ListConsumer>\n\n\n                <ListWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\n                <div className=\"card\">\n                <div className=\"img-container p-5\">\n                        <Link to= \"/weatherapi\">\n                        <img src={'https://wi-images.condecdn.net/image/doEYpG6Xd87/crop/2040/f/weather.jpg'} alt=\"list\" className=\"card-img-top\"></img>\n                    </Link>\n                    \n                </div>\n                {/*card footer*/}\n                <div className=\"card-footer d-flex justify-content-center\">\n                        <p className=\"text-center mb-0\">\n                            Weather Forecast\n                        </p>\n                    </div>\n                    </div>\n                </ListWrapper>\n                </div>\n                </div>\n                </div>\n            </React.Fragment>\n         );\n    }\n}\n\nconst ListWrapper = style.div`\n.card{\n    border-color:transparent;\n    transition:all 5s linear;\n}\n.card-footer{\n    background:transparent;\n    border-top:transparent;\n    transition:all 1s linear;\n    font-size:30px;\n}\n&:hover{\n    .card{\n        border:0.04rem solid rgba(0,0,0,0.2);\n        box-shadow:2px 2px 5px 0px rgba(0,0,0,0.2)\n    }\n    .card-footer{\n        background:rgba(247,247,247);\n    }\n}\n.img-container{\n    position:relative;\n    overflow:hidden;\n}\n.card-img-top{\n    transition: all 1s linear;\n}\n.img-container:hover .card-img-top{\n    transform:scale(1.5);\n}\n`\n \nexport default SectionList;","import React, { Component } from 'react';\nimport {ListConsumer} from '../context';\nimport {Link} from 'react-router-dom';\nimport {ButtonContainer} from './Button';\n\nclass Details extends Component {\n    state = {  }\n    render() { \n        return ( \n            <ListConsumer>\n                {(value)=>{\n                   const {id,title,img,info} = value.detailList;\n                   return (\n                       <div className=\"container py-5\">\n                           {/*title*/}\n                           <div className=\"row\">\n                               <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\n                                   <h1>{title}</h1>\n                               </div>\n                           </div>\n                           {/*end title*/}\n                           {/*list info*/}\n                           <div className=\"row\">\n                             <div className=\"col-10 mx-auto col-md-6 my-3\">\n                            <img src={img} className=\"img-fluid\" alt=\"list\" />\n                            </div>\n                            {/*list text*/}\n                             <div className=\"col-10 mx-auto col-md-6 my-3 text-none\">     \n                              <h2 className=\"text-none.font-weight-bold mt-3 mb-0\">{title}</h2>\n                              <p className=\"text-none lead\">{info}</p>\n                              {/*buttons*/}\n                              <div>\n                                <Link to='/'>\n                                    <ButtonContainer homepage>\n                                        Back to Homepage\n                                    </ButtonContainer>\n                                </Link>\n                              </div>\n                             </div>\n                           </div>\n                       </div>\n                   )\n                }}\n            </ListConsumer>\n         );\n    }\n}\n \nexport default Details ;","import React, { Component } from 'react';\n\nclass Default extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n                <h3>Page not found</h3>\n            </div>\n         );\n    }\n}\n \nexport default Default;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {ButtonContainer} from './Button';\n\nclass ContactMe extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = { \n        id: 3,\n        title: \"How do you find me?\",\n        img: \"https://i.ytimg.com/vi/Lcw5xknnzvc/maxresdefault.jpg\",\n        info: \"Wonder where I am? Look for me via Linkedin (www.linkedin.com/in/geraldinelhy) or email (geraldinelhy@gmail.com).\"\n    }\n     }\n\n     render() { \n        return ( \n                   <div className=\"container py-5\">\n                       {/*title*/}\n                       <div className=\"row\">\n                           <div className=\"col-10 mx-auto text-center text-slanted text-blue my-5\">\n                               <h1>{this.state.title}</h1>\n                           </div>\n                       </div>\n                       {/*end title*/}\n                       {/*list info*/}\n                       <div className=\"row\">\n                         <div className=\"col-10 mx-auto col-md-6 my-3\">\n                        <img src={this.state.img} className=\"img-fluid\" alt=\"list\" />\n                        </div>\n                        {/*list text*/}\n                         <div className=\"col-10 mx-auto col-md-6 my-3 text-none\">     \n                          <h2 className=\"text-none.font-weight-bold mt-3 mb-0\">{this.state.title}</h2>\n                          <p className=\"text-none lead\">{this.state.info}</p>\n                          {/*buttons*/}\n                          <div>\n                            <Link to='/'>\n                                <ButtonContainer homepage>\n                                    Back to Homepage\n                                </ButtonContainer>\n                            </Link>\n                          </div>\n                         </div>\n                       </div>\n                   </div>\n               )\n            }}   \n    \n\nexport default ContactMe; ","import React, { Component } from 'react';\n\nclass WeatherApi extends Component {\n    state = { \n        loading:true,\n        forecast: [],\n     }\n\nasync componentDidMount() {\n    const url = 'https://api.data.gov.sg/v1/environment/2-hour-weather-forecast/';\n    const response = await fetch(url);\n    const data=await response.json();\n    this.setState({forecast: data.items[0].forecasts, loading:false});\n    console.log(data.items[0].forecasts[0]);\n}\n\n    render() { \n        if(this.state.loading) {\n            return <div>loading...</div>\n        }\n\n        if(!this.state.forecast.length) {\n            return <div>Didnt get results</div>\n        }\n\n        return ( \n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <th>Area</th>\n                        <th>Forecast</th>\n                    </thead>\n                    <tbody>\n                {this.state.forecast.map((area,i) => {\n                    return(\n                        <tr key={i}>\n\n                        <td>{area.area}</td>\n                        <td>{area.forecast}</td>\n\n                    </tr>\n                    )\n                })}\n            </tbody>\n            </table>\n            </div>\n            );\n    }\n}\n \nexport default WeatherApi;","import React, { Component } from 'react';\nimport {Switch,Route} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './componentss/Navbar';\nimport SectionList from './componentss/SectionList';\nimport Section from './componentss/Section';\nimport Details from './componentss/Details';\nimport Default from './componentss/Default';\nimport ContactMe from './componentss/ContactMe';\nimport WeatherApi from './componentss/fetchWeatherApi';\n\n\nclass App extends Component {\n  state = {  }\n  render() { \n    return ( \n      <React.Fragment>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={SectionList} />\n          <Route exact path=\"/details\" component={Details} />\n          <Route exact path='/weatherapi' component={WeatherApi} />\n          <Route path=\"/contactme\" component={ContactMe} />\n          <Route component={Default} />\n        </Switch>\n      </React.Fragment>\n     );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {ListProvider} from './context';\n\nReactDOM.render(\n    <ListProvider>\n        <Router>\n        <App />\n    </Router>\n    </ListProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}